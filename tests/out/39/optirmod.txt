#[version = "0.0.5"]
def @main(%x0 : Tensor[(17, 19), float16] /* ty=Tensor[(17, 19), float16] span=from_string:3:22 */, %x1 : Tensor[(19), float16] /* ty=Tensor[(19), float16] span=from_string:4:26 */, %x2 : Tensor[(19), float16] /* ty=Tensor[(19), float16] span=from_string:4:31 */, %x3 : Tensor[(19), float16] /* ty=Tensor[(19), float16] span=from_string:6:26 */, %x4 : Tensor[(19), float16] /* ty=Tensor[(19), float16] span=from_string:6:31 */, %x5 : Tensor[(19), float16] /* ty=Tensor[(19), float16] span=from_string:10:26 */, %x6 : Tensor[(19), float16] /* ty=Tensor[(19), float16] span=from_string:10:31 */, hash="5327c33263ca9a07", ) -> (Tensor[(17, 19), float16],) {
  %18 = fn (%p03: Tensor[(17, 19), float16] /* ty=Tensor[(17, 19), float16] */, Primitive=1, hash="0dac37599c044c7f") -> Tensor[(17, 19, 1), float16] {
    %17 = subtract(%p03, %p03) /* ty=Tensor[(17, 19), float16] */;
    reshape(%17, newshape=[17, 19, 1]) /* ty=Tensor[(17, 19, 1), float16] */
  } /* ty=fn (Tensor[(17, 19), float16]) -> Tensor[(17, 19, 1), float16] */;
  %19 = %18(%x0) /* ty=Tensor[(17, 19, 1), float16] */;
  %20 = fn (%p04: Tensor[(17, 19, 1), float16] /* ty=Tensor[(17, 19, 1), float16] */, Primitive=1, hash="a7dfea1e4362b506") -> Tensor[(17, 19, 1), float16] {
    mean(%p04, axis=[2], keepdims=True) /* ty=Tensor[(17, 19, 1), float16] */
  } /* ty=fn (Tensor[(17, 19, 1), float16]) -> Tensor[(17, 19, 1), float16] */;
  %21 = %20(%19) /* ty=Tensor[(17, 19, 1), float16] */;
  %22 = fn (%p05: Tensor[(17, 19, 1), float16] /* ty=Tensor[(17, 19, 1), float16] */, %p13: Tensor[(17, 19, 1), float16] /* ty=Tensor[(17, 19, 1), float16] */, Primitive=1, hash="07510dcfd5ec2e32") -> Tensor[(17, 19, 1), float16] {
    variance(%p05, %p13, axis=[2], keepdims=True) /* ty=Tensor[(17, 19, 1), float16] */
  } /* ty=fn (Tensor[(17, 19, 1), float16], Tensor[(17, 19, 1), float16]) -> Tensor[(17, 19, 1), float16] */;
  %23 = %22(%19, %21) /* ty=Tensor[(17, 19, 1), float16] */;
  %24 = fn (%p02: Tensor[(17, 19, 1), float16] /* ty=Tensor[(17, 19, 1), float16] */, %p12: Tensor[(17, 19, 1), float16] /* ty=Tensor[(17, 19, 1), float16] */, %p22: Tensor[(17, 19, 1), float16] /* ty=Tensor[(17, 19, 1), float16] */, %p32: float16 /* ty=float16 */, %p41: Tensor[(19), float16] /* ty=Tensor[(19), float16] */, Primitive=1, hash="034bc8a161c34558") -> Tensor[(17, 19), float16] {
    %11 = add(%p22, %p32) /* ty=Tensor[(17, 19, 1), float16] */;
    %12 = subtract(%p02, %p12) /* ty=Tensor[(17, 19, 1), float16] */;
    %13 = sqrt(%11) /* ty=Tensor[(17, 19, 1), float16] */;
    %14 = divide(%12, %13) /* ty=Tensor[(17, 19, 1), float16] */;
    %15 = reshape(%14, newshape=[17, 19]) /* ty=Tensor[(17, 19), float16] */;
    %16 = multiply(%15, %p41) /* ty=Tensor[(17, 19), float16] */;
    nn.batch_flatten(%16) /* ty=Tensor[(17, 19), float16] */
  } /* ty=fn (Tensor[(17, 19, 1), float16], Tensor[(17, 19, 1), float16], Tensor[(17, 19, 1), float16], float16, Tensor[(19), float16]) -> Tensor[(17, 19), float16] */;
  %25 = %24(%19, %21, %23, 1.00136e-05f16 /* ty=float16 */, %x1) /* ty=Tensor[(17, 19), float16] */;
  %26 = fn (%p06: Tensor[(17, 19), float16] /* ty=Tensor[(17, 19), float16] */, Primitive=1, hash="c7dc5c5203643408") -> Tensor[(17, 1), float16] {
    mean(%p06, axis=[1], keepdims=True) /* ty=Tensor[(17, 1), float16] */
  } /* ty=fn (Tensor[(17, 19), float16]) -> Tensor[(17, 1), float16] */;
  %27 = %26(%25) /* ty=Tensor[(17, 1), float16] */;
  %28 = fn (%p07: Tensor[(17, 19), float16] /* ty=Tensor[(17, 19), float16] */, %p14: Tensor[(17, 1), float16] /* ty=Tensor[(17, 1), float16] */, Primitive=1, hash="eb86b122f197243d") -> Tensor[(17, 1), float16] {
    variance(%p07, %p14, axis=[1], keepdims=True) /* ty=Tensor[(17, 1), float16] */
  } /* ty=fn (Tensor[(17, 19), float16], Tensor[(17, 1), float16]) -> Tensor[(17, 1), float16] */;
  %29 = %28(%25, %27) /* ty=Tensor[(17, 1), float16] */;
  %30 = fn (%p01: Tensor[(17, 19), float16] /* ty=Tensor[(17, 19), float16] */, %p11: Tensor[(17, 1), float16] /* ty=Tensor[(17, 1), float16] */, %p21: Tensor[(17, 1), float16] /* ty=Tensor[(17, 1), float16] */, %p31: float16 /* ty=float16 */, %p4: Tensor[(19), float16] /* ty=Tensor[(19), float16] */, %p5: Tensor[(19), float16] /* ty=Tensor[(19), float16] */, Primitive=1, hash="9762f1bef14b1155") -> Tensor[(17, 19), float16] {
    %3 = add(%p21, %p31) /* ty=Tensor[(17, 1), float16] */;
    %4 = subtract(%p01, %p11) /* ty=Tensor[(17, 19), float16] */;
    %5 = sqrt(%3) /* ty=Tensor[(17, 1), float16] */;
    %6 = divide(%4, %5) /* ty=Tensor[(17, 19), float16] */;
    %7 = multiply(%6, %p4) /* ty=Tensor[(17, 19), float16] */;
    %8 = add(%7, %p5) /* ty=Tensor[(17, 19), float16] */;
    %9 = transpose(%8, axes=[0, 1]) /* ty=Tensor[(17, 19), float16] */;
    %10 = sin(%9) /* ty=Tensor[(17, 19), float16] */;
    fast_tanh(%10) /* ty=Tensor[(17, 19), float16] */
  } /* ty=fn (Tensor[(17, 19), float16], Tensor[(17, 1), float16], Tensor[(17, 1), float16], float16, Tensor[(19), float16], Tensor[(19), float16]) -> Tensor[(17, 19), float16] */;
  %31 = %30(%25, %27, %29, 1.00136e-05f16 /* ty=float16 */, %x3, %x4) /* ty=Tensor[(17, 19), float16] */;
  %32 = fn (%p08: Tensor[(17, 19), float16] /* ty=Tensor[(17, 19), float16] */, Primitive=1, hash="c7dc5c5203643408") -> Tensor[(17, 1), float16] {
    mean(%p08, axis=[1], keepdims=True) /* ty=Tensor[(17, 1), float16] */
  } /* ty=fn (Tensor[(17, 19), float16]) -> Tensor[(17, 1), float16] */;
  %33 = %32(%31) /* ty=Tensor[(17, 1), float16] */;
  %34 = fn (%p09: Tensor[(17, 19), float16] /* ty=Tensor[(17, 19), float16] */, %p15: Tensor[(17, 1), float16] /* ty=Tensor[(17, 1), float16] */, Primitive=1, hash="eb86b122f197243d") -> Tensor[(17, 1), float16] {
    variance(%p09, %p15, axis=[1], keepdims=True) /* ty=Tensor[(17, 1), float16] */
  } /* ty=fn (Tensor[(17, 19), float16], Tensor[(17, 1), float16]) -> Tensor[(17, 1), float16] */;
  %35 = %34(%31, %33) /* ty=Tensor[(17, 1), float16] */;
  %36 = fn (%p0: Tensor[(17, 19), float16] /* ty=Tensor[(17, 19), float16] */, %p1: Tensor[(17, 1), float16] /* ty=Tensor[(17, 1), float16] */, %p2: Tensor[(17, 1), float16] /* ty=Tensor[(17, 1), float16] */, %p3: float16 /* ty=float16 */, Primitive=1, hash="2b8daabb22e65d7c") -> Tensor[(17, 19), float16] {
    %0 = add(%p2, %p3) /* ty=Tensor[(17, 1), float16] */;
    %1 = subtract(%p0, %p1) /* ty=Tensor[(17, 19), float16] */;
    %2 = sqrt(%0) /* ty=Tensor[(17, 1), float16] */;
    divide(%1, %2) /* ty=Tensor[(17, 19), float16] */
  } /* ty=fn (Tensor[(17, 19), float16], Tensor[(17, 1), float16], Tensor[(17, 1), float16], float16) -> Tensor[(17, 19), float16] */;
  %37 = %36(%31, %33, %35, 1.00136e-05f16 /* ty=float16 */) /* ty=Tensor[(17, 19), float16] */;
  (%37,) /* ty=(Tensor[(17, 19), float16],) span=from_string:3:3 */
}

#[metadata]
{
  "root": 1, 
  "nodes": [
    {
      "type_key": ""
    }, 
    {
      "type_key": "Map", 
      "keys": [
        "VirtualDevice"
      ], 
      "data": [2]
    }, 
    {
      "type_key": "Array", 
      "data": [3]
    }, 
    {
      "type_key": "VirtualDevice", 
      "attrs": {
        "device_type_int": "1", 
        "memory_scope": "15", 
        "target": "4", 
        "virtual_device_id": "0"
      }
    }, 
    {
      "type_key": "Target", 
      "attrs": {
        "attrs": "11", 
        "features": "13", 
        "host": "14", 
        "keys": "10", 
        "kind": "5", 
        "tag": "9"
      }
    }, 
    {
      "type_key": "TargetKind", 
      "attrs": {
        "default_device_type": "1", 
        "default_keys": "7", 
        "name": "6"
      }
    }, 
    {
      "type_key": "runtime.String", 
      "repr_str": "llvm"
    }, 
    {
      "type_key": "Array", 
      "data": [8]
    }, 
    {
      "type_key": "runtime.String", 
      "repr_str": "cpu"
    }, 
    {
      "type_key": "runtime.String"
    }, 
    {
      "type_key": "Array", 
      "data": [8]
    }, 
    {
      "type_key": "Map", 
      "keys": [
        "mtriple"
      ], 
      "data": [12]
    }, 
    {
      "type_key": "runtime.String", 
      "repr_str": "x86_64-unknown-linux-gnu"
    }, 
    {
      "type_key": "Map"
    }, 
    {
      "type_key": "Target", 
      "attrs": {
        "attrs": "11", 
        "features": "13", 
        "host": "0", 
        "keys": "10", 
        "kind": "5", 
        "tag": "9"
      }
    }, 
    {
      "type_key": "runtime.String"
    }
  ], 
  "b64ndarrays": [], 
  "attrs": {"tvm_version": "0.16.0"}
}